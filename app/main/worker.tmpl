// @ts-ignore
const modules = await import('dannn://import.extension' + '{{url}}')
.catch((error) => {
	self.postMessage({ type: 'error', error: 'Module loading failed' + '{{url}}' + String(error) })
})
Object.keys(modules).forEach((key) => {
	self.postMessage({ type: 'module', name: key })
})
self.onmessage = (event) => {
	const { type, data } = event.data
	if (type === 'call') {
		const { name, args, id } = data
		if (modules[name]) {
			Promise.resolve(modules[name](...args))
				.then((result) => {
					self.postMessage({ type: 'call-result', id, result })
				})
				.catch((error) => {
					self.postMessage({ type: 'call-error', id, error })
				})
		} else {
			self.postMessage({ type: 'error', id, error: 'Module not found' })
		}
	}
}
self.postMessage({ type: 'done' })
